#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
void __print(int x) { cerr << x; }
void __print(long x) { cerr << x; }
void __print(long long x) { cerr << x; }
void __print(unsigned x) { cerr << x; }
void __print(unsigned long x) { cerr << x; }
void __print(unsigned long long x) { cerr << x; }
void __print(float x) { cerr << x; }
void __print(double x) { cerr << x; }
void __print(long double x) { cerr << x; }
void __print(char x) { cerr << '\'' << x << '\''; }
void __print(const char *x) { cerr << '\"' << x << '\"'; }
void __print(const string &x) { cerr << '\"' << x << '\"'; }
void __print(bool x) { cerr << (x ? "true" : "false"); }

template <typename T, typename V>
void __print(const pair<T, V> &x)
{
  cerr << '{';
  __print(x.first);
  cerr << ',';
  __print(x.second);
  cerr << '}';
}
template <typename T>
void __print(const T &x)
{
  int f = 0;
  cerr << '{';
  for (auto &i : x)
    cerr << (f++ ? "," : ""), __print(i);
  cerr << "}";
}
void _print() { cerr << "]\n"; }
template <typename T, typename... V>
void _print(T t, V... v)
{
  __print(t);
  if (sizeof...(v))
    cerr << ", ";
  _print(v...);
}
#ifndef ONLINE_JUDGE
#define debug(x...)             \
  cerr << "[" << #x << "] = ["; \
  _print(x)
#else
#define debug(x...)
#endif
#define IOS                \
  ios::sync_with_stdio(0); \
  cin.tie(0);              \
  cout.tie(0);
#define endl "\n"
#define YES printf("YES\n")
#define NO printf("NO\n")
#define YES printf("YES\n")
#define NO printf("NO\n")
#define NOo printf("-1\n")
#define srt(x) sort(x.begin(), x.end())
#define rsrt(x) sort(x.rbegin(), x.rend())
#define ull unsigned long long
#define ll long long
#define pb push_back
#define ff first
#define ss second
#define all(x) x.begin(), x.end()
#define pii pair<int, int>
#define piii pair<int, pii>
#define min_heap priority_queue<int, vector<int>, greater<int>>
const ll mod = 1000000007;
const ll INF = 1e9;
const ll N = 10000007;
#define vll vector<long long>
#define mll map<long long, long long>
struct edge
{
  ll others;
  ll weight;
};
enum {
  TRAIN = 1,
  NORMAL = 0
};
struct state
{
  ll dist;
  ll v;
  ll mode;
  bool operator<(const state &o) const
  {
    if (dist != o.dist)
      return dist > o.dist;
    if (mode != o.mode)
      return mode > o.mode;
    return v > o.v;
  }
};
vector<edge> adj[100010];
void solve()
{
  ll i, a, b, wt, q = 0, l, r = INT_MAX, j, k = 0, x0 = 0, x1 = 0, n;
  cin >> n >> k >> l;
  for (i = 0; i < k; i++)
  {
    cin >> a >> b >> wt;
    adj[a].pb({b, wt});
    adj[b].pb({a, wt});
  }
  priority_queue<state> pq;
  pq.push({0, 1, NORMAL}); // dist,source,mode;
  for (i = 0; i < l; i++)
  {
    cin >> a >> b;
    pq.push({b, a, TRAIN});// dist,source,mode;
  }
  vll ans(n + 5, INF),mark(n+5,false);
  ll mustuse = 0;
  while (!pq.empty())
  {
    state st = pq.top();
    pq.pop();
    if (mark[st.v])
      continue;
    if(st.mode == TRAIN)
      mustuse++;
    mark[st.v] = true;
    ans[st.v] = st.dist;
    for (auto it : adj[st.v])
    {
      if (ans[it.others] >= it.weight + ans[st.v])
      {
        ans[it.others] = it.weight + ans[st.v];
        pq.push({ans[it.others],it.others,NORMAL});
      }
    }
  }
  cout<<l-mustuse<<endl;
}
int main()
{
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  ll t = 1;
  //cin >> t;
  while (t--)
  {
    solve();
  }
}
